apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.28.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: api
  name: api
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: api
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml
        kompose.version: 1.28.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.network/test-nanodev-app-network: "true"
        io.kompose.service: api
    spec:
      containers:
        - env:
            - name: ADMIN_JWT_SECRET
              valueFrom:
                configMapKeyRef:
                  key: ADMIN_JWT_SECRET
                  name: api--env
            - name: API_TOKEN_SALT
              valueFrom:
                configMapKeyRef:
                  key: API_TOKEN_SALT
                  name: api--env
            - name: APP_KEYS
              valueFrom:
                configMapKeyRef:
                  key: APP_KEYS
                  name: api--env
            - name: DATABASE_CLIENT
              valueFrom:
                configMapKeyRef:
                  key: DATABASE_CLIENT
                  name: api--env
            - name: DATABASE_HOST
              valueFrom:
                configMapKeyRef:
                  key: DATABASE_HOST
                  name: api--env
            - name: DATABASE_NAME
              valueFrom:
                configMapKeyRef:
                  key: DATABASE_NAME
                  name: api--env
            - name: DATABASE_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: DATABASE_PASSWORD
                  name: api--env
            - name: DATABASE_PORT
              valueFrom:
                configMapKeyRef:
                  key: DATABASE_PORT
                  name: api--env
            - name: DATABASE_SSL
              valueFrom:
                configMapKeyRef:
                  key: DATABASE_SSL
                  name: api--env
            - name: DATABASE_USERNAME
              valueFrom:
                configMapKeyRef:
                  key: DATABASE_USERNAME
                  name: api--env
            - name: HOST
              valueFrom:
                configMapKeyRef:
                  key: HOST
                  name: api--env
            - name: JWT_SECRET
              valueFrom:
                configMapKeyRef:
                  key: JWT_SECRET
                  name: api--env
            - name: PORT
              valueFrom:
                configMapKeyRef:
                  key: PORT
                  name: api--env
            - name: TRANSFER_TOKEN_SALT
              valueFrom:
                configMapKeyRef:
                  key: TRANSFER_TOKEN_SALT
                  name: api--env
          image: strapi/strapi
          name: api
          ports:
            - containerPort: 1337
          resources: {}
      restartPolicy: Always
status: {}
